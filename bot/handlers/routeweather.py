# bot/handlers/routeweather.py

from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from db.repository import get_routes_by_user
from bot.weather import get_weather_by_city, condition_map, wind_dir_map as wind_directions


router = Router()
"""
–†–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /routeweather ‚Äî –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
"""

@router.message(F.text == "/routeweather")
async def show_user_routes(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã `/routeweather`.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤ –≤–∏–¥–µ inline-–∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞.
    –ü–æ –Ω–∞–∂–∞—Ç–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –ø–æ –∫–∞–∂–¥–æ–º—É –≥–æ—Ä–æ–¥—É –≤ –º–∞—Ä—à—Ä—É—Ç–µ.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ Telegram –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    routes = await get_routes_by_user(message.from_user.id)
    if not routes:
        await message.answer("üì≠ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤.")
        return

    buttons = [
        [InlineKeyboardButton(text=route.route_name or f"{route.city_from} - {route.city_to}",
                              callback_data=f"rw_{route.id}")]
        for route in routes
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await message.answer("üó∫ –í—ã–±–µ—Ä–∏ –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã:", reply_markup=keyboard)


@router.callback_query(F.data.startswith("rw_"))
async def send_route_weather(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–≥–æ–¥—ã –ø–æ –º–∞—Ä—à—Ä—É—Ç—É.

    –ü–æ–ª—É—á–∞–µ—Ç ID –º–∞—Ä—à—Ä—É—Ç–∞ –∏–∑ callback_data, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –¥–ª—è –¥–≤—É—Ö –≥–æ—Ä–æ–¥–æ–≤
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.

    Args:
        callback (CallbackQuery): Callback-–∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram.
    """
    route_id = int(callback.data.split("_")[1])
    routes = await get_routes_by_user(callback.from_user.id)
    route = next((r for r in routes if r.id == route_id), None)

    if not route:
        await callback.message.edit_text("‚ùå –ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    weather_from = await get_weather_by_city(route.city_from)
    weather_to = await get_weather_by_city(route.city_to)

    def format_weather(city: str, weather: dict) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ Telegram.

        Args:
            city (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.
            weather (dict): –û—Ç–≤–µ—Ç API —Å –ø–æ–≥–æ–¥–æ–π.

        Returns:
            str: –°—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–≥–æ–¥–µ.
        """
        if not weather:
            return f"‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {city}\n"

        fact = weather.get("fact", {})
        condition_code = fact.get("condition", "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        condition_rus = condition_map.get(condition_code, condition_code)

        wind_dir_code = fact.get("wind_dir", "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        wind_dir = wind_directions.get(wind_dir_code, wind_dir_code)

        return (
            f"üìç {city}:\n"
            f"üå° –¢–µ–º–ø: {fact.get('temp', '–Ω/–¥')}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {fact.get('feels_like', '–Ω/–¥')}¬∞C\n"
            f"üí® –í–µ—Ç–µ—Ä: {fact.get('wind_speed', '–Ω/–¥')} –º/—Å, {wind_dir}\n"
            f"üîç –°–æ—Å—Ç–æ—è–Ω–∏–µ: {condition_rus}\n"
        )

    text = f"üì¶ –ü–æ–≥–æ–¥–∞ –ø–æ –º–∞—Ä—à—Ä—É—Ç—É ¬´{route.route_name or f'{route.city_from} - {route.city_to}'}¬ª:\n\n"
    text += format_weather(route.city_from, weather_from)
    text += "\n"
    text += format_weather(route.city_to, weather_to)

    await callback.message.edit_text(text)
